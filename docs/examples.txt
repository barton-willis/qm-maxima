(display2d:false,load(qm),0);
ket([a,b])+ket([c,d]);
mket([a,b])+mket([c,d]);
bell:(1/sqrt(2))*(ket([u,d])-ket([d,u]));
braket(bra([a1,b1]),ket([a2,b2]));
tpket([zp,zm]);
declare([a,b],complex);
psi:a*ket([1])+b*ket([2]);
psidag:dagger(psi);
psidag.psi;
declare([c1,c2],complex,r,real);
k:mket([c1,c2,r]);
b:dagger(k);
b.k;
k:ket([u,d]);
b:bra([u,d]);
b.k;
k:ket([u,d]);
b:bra([u,d]);
b.k;
declare([c1,c2],complex);
mket([c1,c2]);
facts();
k:ket([a,b]);
mketp(k);
k:mket([a,b]);
mketp(k);
kill(c1,c2);
mbra([c1,c2]);
facts();
b:mbra([a,b]);
mbrap(b);
autoket([a,b]);
facts();
autoket([a*sin(x),b*sin(x)]);
facts();
autobra([a,b]);
facts();
autobra([a*sin(x),b]);
facts();
dagger(mbra([%i,2]));
declare([a,b,c],complex);
braket(mket([a,b,c]),mket([a,b,c]));
braket(ket([a1,b1,c1]),ket([a2,b2,c2]));
declare([a,b,c],complex);
norm(mket([a,b,c]));
declare([a,b,c,d],complex);
A:braket(mket([a,b]),mket([c,d]));
P:magsqr(A);
ket([a])+ket([b]);
braket(bra([a]),ket([b]));
braket(bra([a])+bra([c]),ket([b]));
zp;
zm;
yp;
ym;
braket(xp,zp);
declare([a,b],complex);
psi:mket([a,b]);
psi_x:'xp*braket(xp,psi)+'xm*braket(xm,psi);
sigmay;
Sy;
commutator(Sx,Sy);
SY(1/2);
SX(1);
ev(expect(Sy,xp+ym),ratsimp);
ev(qm_variance(Sy,xp+ym),ratsimp);
jmbra(3/2,1/2);
jmbra([3/2,1/2]);
jmketp(jmket(j,m));
jmketp(jmket([j,m]));
jmcheck(3/2,1/2);
K:jmket(j1,m1);
B:jmbra(j2,m2);
jmbraket(B,K);
B:jmbra(j1,m1);
jmbraket(B,K);
K:jmket([3/2,1/2]);
B:jmbra([3/2,1/2]);
jmbraket(B,K);
jmbraket(jmbra(j1,m1),jmket(j2,m2));
k:jmket([j,m]);
JP(k);
JM(k);
Jsqr(k);
Jz(k);
SP(1);
SM(1);
RZ(1/2,t);
UU(w*Sy,t);
kill(a,b,c,d);
declare([a,b,c,d],complex);
tpbra([mbra([a,b]),mbra([c,d])]);
tpbra([dagger(zp),mbra([c,d])]);
K:tpket([zp,zm]);
zpb:dagger(zp);
zmb:dagger(zm);
B:tpbra([zpb,zmb]);
tpbraket(K,B);
tpbraket(B,K);
K:ket([a1,b1]);
B:bra([a2,b2]);
braket(B,K);
bra([a1,Id,c1]).ket([a2,b2,c2]);
bra([a1,b1,c1]).ket([Id,b2,c2]);
